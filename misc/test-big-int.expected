
test_add
--------
All add tests use this addend:
[2m    3         2         1         0
[0mFEDC_BA90 FACE_FEED CAFE_BABE DEAD_BEEF
[2m    3         2         1         0
[0mFEDC_BA90 FACE_FEED CAFE_BABE FFFF_FFFF
overflow: 0
[2m    3         2         1         0
[0mFEDC_BA90 FACE_FEED CAFE_BABF 0000_0000
overflow: 0
[2m    3         2         1         0
[0mFEDC_BA90 FACE_FEED FFFF_FFFF 0000_0000
overflow: 0
[2m    3         2         1         0
[0mFEDC_BA90 FACE_FEEE 0000_0000 0000_0000
overflow: 0
[2m    3         2         1         0
[0mFEDC_BA90 FFFF_FFFF 0000_0000 0000_0000
overflow: 0
[2m    3         2         1         0
[0mFEDC_BA91 0000_0000 0000_0000 0000_0000
overflow: 0
[2m    3         2         1         0
[0mFFFF_FFFF 0000_0000 0000_0000 0000_0000
overflow: 0
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
overflow: 1



test_neg
--------
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
[2m    3         2         1         0
[0mFFFF_FFFF FFFF_FFFF FFFF_FFFF FFFF_FFFF
[2m    3         2         1         0
[0mFFFF_FFFF FFFF_FFFF FFFF_FFFF FFFF_FFFE
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0001



test_shl
--------
small shifts <<
 << 0
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000


 << 1
[2m    3         2         1         0
[0m8888_8888 2222_2222 8888_8888 2222_2222
 << 2
[2m    3         2         1         0
[0m8888_8888 4444_4445 1111_1110 4444_4444
byte shifts <<
 << 0
[2m    3         2         1         0
[0mCAFE_BABE DEAD_BEEF FACE_FEED 1234_5678


 << 8
[2m    3         2         1         0
[0mFEBA_BEDE ADBE_EFFA CEFE_ED12 3456_7800
 << 16
[2m    3         2         1         0
[0mBABE_DEAD BEEF_FACE FEED_1234 5678_0000
 << 24
[2m    3         2         1         0
[0mBEDE_ADBE EFFA_CEFE ED12_3456 7800_0000
 << 32
[2m    3         2         1         0
[0mDEAD_BEEF FACE_FEED 1234_5678 0000_0000
 << 40
[2m    3         2         1         0
[0mADBE_EFFA CEFE_ED12 3456_7800 0000_0000
 << 48
[2m    3         2         1         0
[0mBEEF_FACE FEED_1234 5678_0000 0000_0000
 << 56
[2m    3         2         1         0
[0mEFFA_CEFE ED12_3456 7800_0000 0000_0000
 << 64
[2m    3         2         1         0
[0mFACE_FEED 1234_5678 0000_0000 0000_0000
 << 72
[2m    3         2         1         0
[0mCEFE_ED12 3456_7800 0000_0000 0000_0000
 << 80
[2m    3         2         1         0
[0mFEED_1234 5678_0000 0000_0000 0000_0000
 << 88
[2m    3         2         1         0
[0mED12_3456 7800_0000 0000_0000 0000_0000
 << 96
[2m    3         2         1         0
[0m1234_5678 0000_0000 0000_0000 0000_0000
 << 104
[2m    3         2         1         0
[0m3456_7800 0000_0000 0000_0000 0000_0000
 << 112
[2m    3         2         1         0
[0m5678_0000 0000_0000 0000_0000 0000_0000
 << 120
[2m    3         2         1         0
[0m7800_0000 0000_0000 0000_0000 0000_0000
 << 128
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
boundary tests
 << 127
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000


 << 129
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
 << 127
[2m    3         2         1         0
[0m8000_0000 0000_0000 0000_0000 0000_0000
 << 129
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
 << 32
[2m    3         2         1         0
[0mFFFF_FFFF FFFF_FFFF FFFF_FFFF 0000_0000
small shifts
 >> 1
[2m    3         2         1         0
[0m2222_2222 0888_8888 A222_2222 0888_8888


 >> 2
[2m    3         2         1         0
[0m0888_8888 8444_4444 5111_1111 0444_4444
byte shifts >>
 << 0
[2m    3         2         1         0
[0mCAFE_BABE DEAD_BEEF FACE_FEED 1234_5678


 >> 8
[2m    3         2         1         0
[0m00CA_FEBA BEDE_ADBE EFFA_CEFE ED12_3456
 >> 16
[2m    3         2         1         0
[0m0000_CAFE BABE_DEAD BEEF_FACE FEED_1234
 >> 24
[2m    3         2         1         0
[0m0000_00CA FEBA_BEDE ADBE_EFFA CEFE_ED12
 >> 32
[2m    3         2         1         0
[0m0000_0000 CAFE_BABE DEAD_BEEF FACE_FEED
 >> 40
[2m    3         2         1         0
[0m0000_0000 00CA_FEBA BEDE_ADBE EFFA_CEFE
 >> 48
[2m    3         2         1         0
[0m0000_0000 0000_CAFE BABE_DEAD BEEF_FACE
 >> 56
[2m    3         2         1         0
[0m0000_0000 0000_00CA FEBA_BEDE ADBE_EFFA
 >> 64
[2m    3         2         1         0
[0m0000_0000 0000_0000 CAFE_BABE DEAD_BEEF
 >> 72
[2m    3         2         1         0
[0m0000_0000 0000_0000 00CA_FEBA BEDE_ADBE
 >> 80
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_CAFE BABE_DEAD
 >> 88
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_00CA FEBA_BEDE
 >> 96
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 CAFE_BABE
 >> 104
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 00CA_FEBA
 >> 112
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_CAFE
 >> 120
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_00CA
 >> 128
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
boundary tests
 >> 127
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0001


 >> 129
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
 >> 127
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0001
 >> 129
[2m    3         2         1         0
[0m0000_0000 0000_0000 0000_0000 0000_0000
 >> 32
[2m    3         2         1         0
[0m0000_0000 FFFF_FFFF FFFF_FFFF FFFF_FFFF



test_clz
--------
uint32_clz(0x0000_0000): 32
uint32_clz(0x0000_0001): 31
uint32_clz(0x0000_0002): 30
uint32_clz(0x0000_0003): 30
uint32_clz(0x0000_0004): 29
uint32_clz(0x8000_0000):  0
uint32_clz(0x4FFF_FFFF):  1
uint32_clz(0x2FFF_FFFF):  2
uint32_clz(0x0000_FFFF): 16
uint32_clz(0x0000_1000): 19
uint32_clz(0x0000_0100): 23
uint32_clz(0x0000_0010): 27
uint32_clz(0x0000_0001): 31

clz all zeros: 128
clz all ones: 0
clz top word 0x0000_0001, all else zeros: 31
clz top word 0x0000_0001, all else ones: 31
clz top word zero, next 0x0000_0001, all else zeros: 63
clz top word zero, next 0x0000_0001, all else ones: 63
clz top two words zero, next 0x0000_0001, all else zeros: 95
clz top two words zero, next 0x0000_0001, all else ones: 95
clz top three words zero, next 0x0000_1000: 115
clz top three words zero, next 0x0000_0001: 127



test_shortmul
-------------
multiply by powers of 2
2^0
2^1
2^2
2^3
2^4
2^5
2^6
2^7
2^8
2^9
2^10
2^11
2^12
2^13
2^14
2^15
2^16
2^17
2^18
2^19
2^20
2^21
2^22
2^23
2^24
2^25
2^26
2^27
2^28
2^29
2^30

multiply by powers of 10
123456789012345678901234567901 x 10^1 (10, 0x0000_000A)
[2m    3         2         1         0
[0m0000_009B D30A_3C64 5943_DD16 90A0_3A12
overflow: 0
123456789012345678901234567901 x 10^2 (100, 0x0000_0064)
[2m    3         2         1         0
[0m0000_0616 3E66_5BEB 7CA6_A2E1 A642_44B4
overflow: 0
123456789012345678901234567901 x 10^3 (1000, 0x0000_03E8)
[2m    3         2         1         0
[0m0000_3CDE 6FFF_9732 DE82_5CD0 7E96_AF08
overflow: 0
123456789012345678901234567901 x 10^4 (10000, 0x0000_2710)
[2m    3         2         1         0
[0m0002_60B0 5FFB_E7FC B117_A024 F1E2_D650
overflow: 0
123456789012345678901234567901 x 10^5 (100000, 0x0001_86A0)
[2m    3         2         1         0
[0m0017_C6E3 BFD7_0FDE EAEC_4171 72DC_5F20
overflow: 0
123456789012345678901234567901 x 10^6 (1000000, 0x000F_4240)
[2m    3         2         1         0
[0m00ED_C4E5 7E66_9EB5 2D3A_8E6E 7C9B_B740
overflow: 0
123456789012345678901234567901 x 10^7 (10000000, 0x0098_9680)
[2m    3         2         1         0
[0m0949_B0F6 F002_3313 C449_9050 DE15_2880
overflow: 0
123456789012345678901234567901 x 10^8 (100000000, 0x05F5_E100)
[2m    3         2         1         0
[0m5CE0_E9A5 6015_FEC5 AADF_A328 ACD3_9500
overflow: 0
123456789012345678901234567901 x 10^9 (1000000000, 0x3B9A_CA00)
[2m    3         2         1         0
[0mA0C9_2075 C0DB_F3B8 ACBC_5F96 C043_D200
overflow: 1


